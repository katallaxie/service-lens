openapi: 3.0.0
info:
  title: Service Lens API
  description: Lens API
  version: 1.0.0
paths:

  # Workload
  /v1/workload:
    post:
      summary: Add a new workload
      operationId: addWorkload
      tags:
        - workloads
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workload'
      responses:
        '200':
          description: OK
          
  /v1/workload/{id}:
    get:
      summary: Get a workload
      operationId: getWorkload
      tags:
        - workloads
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
      put:
        summary: Update a workload
        operationId: updateWorkload
        tags:
          - workloads
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Workload'
      delete:
        summary: Delete a workload
        operationId: deleteWorkload
        tags:
          - workloads
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Workload'

  # Workloads
  /v1/workloads:
    get:
      summary: List all workloads
      operationId: listWorkloads
      tags:
        - workloads
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Pagination'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Workload'
                          
  # Lens
  /v1/lens:
    post:
      summary: Add a new lens
      operationId: addLens
      tags:
        - lenses
      requestBody:
        required: true
        content:
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      responses:
        '200':
          description: OK

  /v1/lens/{id}:
    get:
      summary: Get a lens
      operationId: getLens
      tags:
        - lenses
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lens'

    delete:
      summary: Delete a lens
      operationId: deleteLens
      tags:
        - lens
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lens'
  
  # Lenses
  /v1/lenses:
    get:
      summary: List all lenses
      operationId: listLenses
      tags:
        - lenses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Pagination'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Lens'

components:
  schemas:
    Pagination:
      type: object
      properties:
        total:
          type: integer
        offset:
          type: integer
        limit:
          type: integer

    Workload:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        envinronment:
          type: string

    Lens:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        owner:
          type: string
        spec:
          type: string
        tags:
          type: array
          items:
            type: string